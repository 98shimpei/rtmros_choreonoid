(load "package://hrpsys_ros_bridge_jvrc/euslisp/jaxon_jvrc-interface.l")
(jaxon_jvrc-init)
(setq *robot* *jaxon_jvrc*)

(send *ri* :set-gait-generator-param :optional-go-pos-finalize-footstep-num 0) ;; warn, for simulator only!
(defun start-walking ()
  (send *ri* :start-auto-balancer)
  (send *ri* :start-st)
  )

(defun speedup-mode ()
  (start-walking)
  (send *ri* :set-gait-generator-param :default-step-time 0.6)
  (send *ri* :set-gait-generator-param :stride-parameter (float-vector 0.25 0.1 15.0 0.1))
  (send *robot* :reset-pose)
  (send *robot* :legs :move-end-pos (float-vector 0 0 200) :local)
  (send *ri* :angle-vector (send *robot* :angle-vector))
  (send *ri* :wait-interpolation)
  )

(defun default-mode ()
  (start-walking)
  (send *ri* :set-gait-generator-param :default-step-time 1.2)
  (send *ri* :set-gait-generator-param :stride-parameter (float-vector 0.15 0.05 10.0 0.05))
  (send *robot* :reset-pose)
  (send *ri* :angle-vector (send *robot* :angle-vector))
  (send *ri* :wait-interpolation)
  )

(defun go-pos-time (x y r)
  (setq start-time (send (ros::time-now) :to-sec))
  (send *ri* :go-pos x y r)
  (format t "total time: ~A" (- (send (ros::time-now) :to-sec) start-time))
  )

(warning-message 2 "speedup-mode")
(warning-message 2 "default-mode")

(defun main-loop ()
  (ros::advertise-service "/speedup_mode" std_srvs::Empty #'(lambda (req) (speedup-mode) (send req :response)))
  (ros::advertise-service "/default_mode" std_srvs::Empty #'(lambda (req) (default-mode) (send req :response)))
  (ros::rate 10)
  (while t
    (ros::sleep)
    (ros::spin-once)
    )
  )
