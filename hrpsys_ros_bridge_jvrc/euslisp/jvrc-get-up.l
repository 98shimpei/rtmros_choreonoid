(require "package://hrpsys_ros_bridge_jvrc/euslisp/jaxon_jvrc-interface.l")
(when (not (boundp '*jaxon_jvrc*))
  (jaxon_jvrc-init)
  (setq *robot* *jaxon_jvrc*)
  )

(defun send-pose (&key (real nil) (base-time 5000))
  (when real
    (send *ri* :angle-vector (send *robot* :angle-vector) base-time)
    (send *ri* :wait-interpolation)
    ))

(defun prepare-for-getting-up (&key (face-down nil) (real nil) (base-time 5000))
  (send *ri* :start-grasp)
  (when face-down
    (send *robot* :init-pose)
    (send-pose :real real :base-time base-time)
    (send *robot* :rarm-elbow-p :joint-angle 60)
    (send *robot* :larm-elbow-p :joint-angle 60)
    (send-pose :real real :base-time base-time)
    (send *robot* :rarm :shoulder-r :joint-angle -180)
    (send *robot* :larm :shoulder-r :joint-angle 180)
    (send-pose :real real :base-time base-time)
    )
  (send *robot* :init-pose)
  (send *robot* :rarm-shoulder-r :joint-angle -180)
  (send *robot* :larm-shoulder-r :joint-angle 180)
  (send-pose :real real :base-time base-time)
  (send *robot* :rarm-shoulder-y :joint-angle -180)
  (send *robot* :larm-shoulder-y :joint-angle 180)
  (send-pose :real real :base-time base-time)
  )

;;うつ伏せから起き上がり
(defun get-up-face-down (&key (face-down nil) (real nil) (base-time 5000))
  (prepare-for-getting-up :face-down face-down :real real :base-time base-time)
  (send *robot* :rleg-ankle-p :joint-angle -70)
  (send *robot* :lleg-ankle-p :joint-angle -70)
  (send-pose :real real :base-time base-time)
  (send *robot* :larm-shoulder-r :joint-angle 170)
  (send *robot* :rarm-shoulder-r :joint-angle -170)
  (send-pose :real real :base-time base-time)
  (send *robot* :rarm-shoulder-p :joint-angle 50)
  (send *robot* :larm-shoulder-p :joint-angle 50)
  (send-pose :real real :base-time base-time)
  (send *robot* :rleg-ankle-p :joint-angle -40)
  (send *robot* :lleg-ankle-p :joint-angle -40)
  (send *robot* :rleg-crotch-p :joint-angle -45)
  (send *robot* :lleg-crotch-p :joint-angle -45)
  (send *robot* :larm-shoulder-p :joint-angle 70)
  (send *robot* :rarm-shoulder-p :joint-angle 70)
  (send-pose :real real :base-time base-time)
  (send *robot* :lleg-ankle-p :joint-angle -70)
  (send *robot* :rleg-ankle-p :joint-angle -70)
  (send *robot* :lleg-crotch-p :joint-angle -75)
  (send *robot* :rleg-crotch-p :joint-angle -75)
  (send *robot* :rleg-knee-p :joint-angle 75)
  (send *robot* :lleg-knee-p :joint-angle 75)
  (send-pose :real real :base-time base-time)
  (send *robot* :lleg-knee-p :joint-angle 110)
  (send *robot* :rleg-knee-p :joint-angle 110)
  (send *robot* :rleg-crotch-p :joint-angle -110)
  (send *robot* :lleg-crotch-p :joint-angle -110)
  (send-pose :real real :base-time base-time)
  (send *robot* :rarm-shoulder-p :joint-angle 100)
  (send *robot* :larm-shoulder-p :joint-angle 100)
  (send *robot* :rleg-knee-p :joint-angle 150)
  (send *robot* :lleg-knee-p :joint-angle 150)
  (send-pose :real real :base-time base-time)
  (send *robot* :lleg-crotch-p :joint-angle -110)
  (send *robot* :rleg-crotch-p :joint-angle -110)
  (send *robot* :larm-shoulder-p :joint-angle 130)
  (send *robot* :rarm-shoulder-p :joint-angle 130)
  (send-pose :real real :base-time (* 5 base-time))
  (send *robot* :lleg-crotch-p :joint-angle -100)
  (send *robot* :rleg-crotch-p :joint-angle -100)
  (send *robot* :rarm-shoulder-p :joint-angle 180)
  (send *robot* :larm-shoulder-p :joint-angle 180)
  (send-pose :real real :base-time (* 5 base-time))
  (warn "start auto-balancer!!!~%")
  (send *ri* :start-auto-balancer)
  (send *robot* :reset-pose)
  (send *robot* :rarm-elbow-p :joint-angle -180)
  (send *robot* :larm-elbow-p :joint-angle -180)
  (send-pose :real real :base-time (* 5 base-time))
  (warn "start stabilizer!!!~%")
  (send *ri* :start-st)
  (send *robot* :reset-pose)
  (send-pose :real real :base-time (* 2 base-time))
  )

(defun get-up (&key (real t) (base-time 1000))
  (send *ri* :stop-st)
  (send *ri* :stop-auto-balancer)
  (send *ri* :stop-impedance :larm)
  (send *ri* :stop-impedance :rarm)
  (send *ri* :start-grasp)
  (if (y-or-n-p "aomuke?~%")
      (ohara-no-get-up) ;;小原
    (get-up-face-down :real real :face-down t :base-time base-time)
    ))
